# User feedback

- s/new tab/new window — instruct the user to right click
- explain nonsignificance of whitespace earlier

# BUGS

- If a load error happens that is not a SyntaxError,
  nonfatal syntax issues (e.g. trailing commas) may be
  highlighted, which is confusing.
- deleting all the code does not make the output of displayText()
  go away—the function doesn't get undefined if there's no
  define() call.
- latent bug: once multiple files are supported, what will happen
  if some files have syntax errors when Verse first starts?
  How will those errors be reported to the user? One way of
  avoiding this is to only save files that eval successfully.

# UX CONCERNS

- provide a better means of hiding the display pane. startDisplay(() => [])
  should show the display but print nothing.
- clear the display and log when a program exits. Currently,
  it's hard to tell whether the program is still running.
- add restart button

# TO RESEARCH

- algebraic types: replace `isNumber` etc. with `isA(ctor)`?
  See: https://www.npmjs.com/package/algebraic-type
- figure out how to bundle docs in editor

# FEATURES

- at('foo.bar.baz', append('hi'), object)
- linked list type
- (to support below) nail down storage format
- (to support below) use localForage
- multiple files
- button to export a project to disk as standalone HTML
- button to import a project from another version of Verse

# LOW-RISK FEATURES

- create a `debug()` function that prints to the log and
  doesn't have to be yielded

# BREAKING CHANGES FOR 2.0

- rename waitForChar to waitForKey
- Run app code in strict mode
- rename reducer to updater
- make retry() always retry the current routine
- replace firstOf, lastOf with firstOr, lastOr (you must
  provide a default in case the array is empty)
- same for get() -- make it require a default
- canonical action key should be verb, not type, because
  type has other meanings


[ Load ][ Test ][ Run ][ Inspect ] : [ Docs ]

Tests--especially auto-running tests--impel one to "hurry up and get something working". This destroys serenity. How
to restore it?

Have tests optionally return a value, which is printed in
the test report? Then you can see the value before crafting
an assertion. The test never "fails".

This also probably obsoletes displayText

# REFACTORING

- move defaulting of reducer, getStateType to Store to
  fix duplication between Core and Simulator
